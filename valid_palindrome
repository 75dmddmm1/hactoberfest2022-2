/*
A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.
Given a string s, return true if it is a palindrome, or false otherwise.
*/
#include <iostream>
using namespace std;

class Solution {
public:
    bool isPalindrome(string s) {
        int j=s.length()-1;
        int i=0;
        for (int k=0;k<s.length();k++){
            bool test=true;
            bool test1=true;
            if ((s[i]>=48 && s[i]<=57)||(s[j]>=48 && s[j]<=57))test=false;
            if (s[j]>=48 && s[j]<=57)test1=false;


            if(test &&('A'>s[i]  ||('Z'<s[i]&& 'a'>s[i])|| 'z'<s[i] )){i++;continue;}
            if(test1 &&( 'A'>s[j] ||('Z'<s[j]&&'a'>s[j])|| 'z'<s[j])){j--;continue;}
           cout<<int(s[i])<<int(s[j]);
            if (65<=(int (s[i])) && (int (s[i]))<=90){
                s[i]=s[i]-'A'+'a';

            }
            if (65<=int (s[j]) && (int (s[j]))<=90){
                s[j]=s[j]-'A'+'a';
                }

            if (s[i]!=s[j])return false;


            i++;
            j--;
        }
        return true;
    }
    
    //another approach
    bool isPalindrome(string s) {
        string temp;
        for(int i=0;i<s.length();i++){
            if(s[i] >= 65 && s[i] <= 90){ //letters are capitals
                temp += s[i]+32;
            }
            else if(s[i] >= 97 && s[i] <= 122) temp += s[i];
            else if(s[i] >= 48 && s[i] <= 57) temp += s[i];
        }
        int l = temp.length();
        for(int i=0;i<l/2;i++){
            if(temp[i]!=temp[l-i-1]) return false;
        }
        return true;
    }
};
int main()
{
Solution obj;
bool ans=obj.isPalindrome("noon");
cout<<ans;
}
